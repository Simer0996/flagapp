{"ast":null,"code":"var _jsxFileName = \"/Users/simersingh/Downloads/flagapp/src/components/CountryInfo/CountryInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    countryName\n  } = useParams();\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n        if (!res.ok) throw new Error(\"Could not found!\");\n        const data = await res.json();\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n    getCountryByName();\n  }, [countryName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading........\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this), error && !isLoading && {\n      error\n    }, country === null || country === void 0 ? void 0 : country.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flags.png,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Population:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Intl.NumberFormat().format(country.population)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Sub Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.subregion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"0E2W6eTuax1k4wE8jY8tAA96Dm4=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","apiURL","Link","CountryInfo","country","setCountry","isLoading","setIsLoading","error","setError","countryName","getCountryByName","res","fetch","ok","Error","data","json","message","map","index","flags","png","name","common","Intl","NumberFormat","format","population","region","subregion","capital"],"sources":["/Users/simersingh/Downloads/flagapp/src/components/CountryInfo/CountryInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\n\nconst CountryInfo = () => {\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { countryName } = useParams();\n\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n\n        if (!res.ok) throw new Error(\"Could not found!\");\n\n        const data = await res.json();\n\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n\n    getCountryByName();\n  }, [countryName]);\n\n  return (\n    <div>\n\n      <Link to=\"/\"><button>Back</button></Link>\n\n\n      {isLoading && !error && <h4>Loading........</h4>}\n      {error && !isLoading && { error }}\n\n      {country?.map((country, index) => (\n        <div key={index}>\n          <div>\n            <img src={country.flags.png} alt=\"\" />\n          </div>\n\n          <div>\n            <h3>{country.name.common}</h3>\n\n            <div>\n              <h5>\n                Population:{\" \"}\n                <span>\n                  {new Intl.NumberFormat().format(country.population)}\n                </span>\n              </h5>\n              <h5>\n                Region: <span>{country.region}</span>\n              </h5>\n              <h5>\n                Sub Region: <span>{country.subregion}</span>\n              </h5>\n              <h5>\n                Capital: <span>{country.capital}</span>\n              </h5>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CountryInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}